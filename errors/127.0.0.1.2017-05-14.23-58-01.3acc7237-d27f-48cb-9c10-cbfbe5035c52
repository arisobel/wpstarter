(dp1
S'output'
p2
S'<class \'gluon.contrib.pymysql.err.InternalError\'> (1054, u"Unknown column \'t_menu_master.f_order_master\' in \'field list\'")'
p3
sS'layer'
p4
S'C:\\web2py\\applications\\wpstarter\\models\\menu.py'
p5
sS'code'
p6
S'# -*- coding: utf-8 -*-\n\n#########################################################################\n# Customize your APP title, subtitle and menus here\n#########################################################################\n\nresponse.logo_mini = IMG(_src=URL(\'static\', \'images/favicon.png\'), _alt=myconf.get(\'app.company\'), _width="30px")\n\n# response.logo = IMG(_src=URL(\'static\', \'images/favicon.png\'), _alt=myconf.get(\'app.company\'), _width="180px")\n# response.logo = SPAN(\'web\', B(2), \'py\', XML(\'&trade;&nbsp;\'))\nresponse.logo = myconf.get(\'app.abbreviation\')\n\n# default page title that appears in browser tabs and bookmarks\nresponse.title = \'%s: %s %s\' % (\n    myconf.get(\'app.abbreviation\'),\n    request.controller.replace(\'_\', \' \').title(),\n    request.function.replace(\'_\', \' \').title()\n)\n\nresponse.subtitle = \'\'\n\n# default view title that appears at top of default layout content section\nresponse.view_title = \'%s %s\' % (\n    request.controller.replace(\'_\', \' \').title(),\n    request.function.replace(\'_\', \' \').title()\n)\n\n# read more at http://dev.w3.org/html5/markup/meta.name.html\nresponse.meta.author = myconf.get(\'app.author\')\nresponse.meta.description = myconf.get(\'app.description\')\nresponse.meta.keywords = myconf.get(\'app.keywords\')\nresponse.meta.generator = myconf.get(\'app.generator\')\n\nresponse.company = myconf.get(\'app.company\')\nresponse.version = myconf.get(\'app.version\')\n\n# your http://google.com/analytics id\nresponse.google_analytics_id = None\n\n#====================================================================\n#novo menu - 26/12/2013\n\n\nfrom collections import defaultdict\n#carrega grupos pertencentes a esse user - funcao lista_grupos() em 0.py\nlist_groups = list_groups()\n#response.flash = lista_grupos\n#carrega o menu master numa vari[avel, pra nao precisar ficar acessando o BD toda hora\nmaster = db().select(db.t_menu_master.ALL,orderby=db.t_menu_master.f_order_master)\n#carrega to tabea do menu mua vari\xc3\xa1vel, contendo todos os dados para montagem do menu\ndetalhes = db().select(db.t_menu.ALL)\n#flitra os itens de menu fazendo join com a tabela t_menu_grupo - e flitrando com as que pertencem aos\n#gurpos do usu\xc3\xa1rio logado = lista_grupos\nmenu_detalhe = db(db.t_menu_group.f_grupo.belongs(list_groups)).select(db.t_menu.f_menu_master,\n   db.t_menu.id,\n        join=db.t_menu_group.on(db.t_menu_group.f_menu==db.t_menu.id),\n        groupby=db.t_menu.id,\n        orderby=db.t_menu.f_menu_order\n\n                                                                       )\n#atribui a vari\xc3\xa1vel Menu \xc3\xa0 um defaultlist - que \xc3\xa9 um dict que possuiu listas increment\xc3\xa1veis -\n#formando o Menu Master e Details\nmenu = defaultdict(list)\nmenu_new = dict()\n\n#itera sobre os tens de menu flitrados j\xc3\xa1 pelos grupos do usu\xc3\xa1rio detro da vari\xc3\xa1vel Menu\nfor row in menu_detalhe:\n    if int(row.id) not in menu[row.f_menu_master]:\n        menu[row.f_menu_master].append(int(row.id))\n        \nfor row in menu_detalhe:\n    if row.f_menu_master not in menu_new.keys():\n        menu_new[row.f_menu_master] = [row.id]\n    else:\n        menu_new[row.f_menu_master].append(int(row.id))\n        \n#print \'menu_new =>\', menu_new, \'\\n\'\n        \n        \nfor row in menu_detalhe:\n    if int(row.id) not in menu[row.f_menu_master]:\n        menu[row.f_menu_master].append(int(row.id))\n        \n#response.menu=menu_new\n#response.flash = menu\n\n#monta o menu propriamente dito em ciam da variavel que j\xc3\xa1 possui a estrutura do master detail\n#onde o m \xc3\xa9 o Id do Master e l a lista dos detalhes\n\nresponse.menu = []\nfor m, l in menu.iteritems():\n    master = db.t_menu_master[m]\n    item_master = {\'nome_master\':master[\'f_menu_master\'], \'iconemaster\': master[\'f_menu_master_icon\']}\n    internal_list=[]\n    for x in l:\n        menu_det = db.t_menu[x]\n        item = {\'nome\':menu_det[\'f_menu_detail\'],\'url\': URL(db.t_menu[x][\'f_menu_controller\'],menu_det[\'f_menu_function\']), \'icon\':menu_det[\'f_menu_detail_icon\']}\n        internal_list.append(item)\n    response.menu.append([item_master,internal_list])\n\n\'\'\'\nfor m in response.menu:\n    print \'m=>\', m, \'\\n\'\n    print \'m=>itens\', m[0][\'nome_master\'], m[0][\'iconemaster\'], \'\\n\\n\'\n\'\'\'\n\n    \n#print  XML(BEAUTIFY(response.menu))\n#print  response.menu\n#print \'\\n\'\n#print  menu\n\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "C:\\web2py\\gluon\\restricted.py", line 227, in restricted\n    exec ccode in environment\n  File "C:\\web2py\\applications\\wpstarter\\models\\menu.py", line 49, in <module>\n    master = db().select(db.t_menu_master.ALL,orderby=db.t_menu_master.f_order_master)\n  File "C:\\web2py\\gluon\\packages\\dal\\pydal\\objects.py", line 2020, in select\n    return adapter.select(self.query, fields, attributes)\n  File "C:\\web2py\\gluon\\packages\\dal\\pydal\\adapters\\base.py", line 1296, in select\n    return self._select_aux(sql,fields,attributes)\n  File "C:\\web2py\\gluon\\packages\\dal\\pydal\\adapters\\base.py", line 1253, in _select_aux\n    self.execute(sql)\n  File "C:\\web2py\\gluon\\packages\\dal\\pydal\\adapters\\base.py", line 1388, in execute\n    return self.log_execute(*a, **b)\n  File "C:\\web2py\\gluon\\packages\\dal\\pydal\\adapters\\base.py", line 1382, in log_execute\n    ret = self.get_cursor().execute(command, *a[1:], **b)\n  File "C:\\web2py\\gluon\\contrib\\pymysql\\cursors.py", line 117, in execute\n    self.errorhandler(self, exc, value)\n  File "C:\\web2py\\gluon\\contrib\\pymysql\\connections.py", line 202, in defaulterrorhandler\n    raise errorclass, errorvalue\nInternalError: (1054, u"Unknown column \'t_menu_master.f_order_master\' in \'field list\'")\n'
p11
s.