(dp1
S'output'
p2
S'<class \'gluon.contrib.pymysql.err.InternalError\'> (1050, u"Table \'FORNECEDORES\' already exists")'
p3
sS'layer'
p4
S'C:\\web2py\\applications\\wpstarter\\models\\db3_tables.py'
p5
sS'code'
p6
S"# coding: utf8\n########################################\n\nimport datetime\n\n########################################\n\n########################################\n\ndb.define_table('CLIENTES',\n   Field('CODIGO' ,'id'),\n   Field('DATA', 'date', label='Data de  Resgistro', default=datetime.datetime.now()),\n   Field('NOME', 'string', label='Nome'),\n   Field('ENDERECO', 'string', label='Endere\xc3\xa7o'),\n   Field('BAIRRO', 'string'),\n   Field('CIDADE', 'string'),\n   Field('ESTADO', 'string', requires=IS_IN_SET(dal_list_states_br)),\n   Field('CEP', 'string'),\n   Field('TELEFONE1', 'string'),\n   Field('TELEFONE2', 'string'),\n   Field('TELEFONE3', 'string'),\n   Field('BAIRRO', 'string'),\n   Field('BAIRRO', 'string'),\n   Field('BAIRRO', 'string'),\n   Field('CNPJ', 'string'),\n   Field('INSCRICAO', 'string'),\n   Field('RG1', 'string'),\n   Field('CPF1', 'string'),\n   Field('OBS', 'string'),\n   Field('EMAIL', 'string'),\n   format='%(NOME)s',\n   migrate=True)\n   \n   \n   \n############################################\n#   FORNECEDORES\n#   CODFORNEC  NOMEFRN   \n\ndb.define_table('FORNECEDORES',\n   Field('CODFORNEC' ,'id'),\n   Field('NOMEFRN', 'string', label='Fornecedor'),      \n   format='%(NOMEFRN)s',\n   migrate=True)      \n\n      \n#############################################\n# PRODUTOS \n# CODIGO  NOME    NOME_HEB   PRECO  ESTOQUE  ENTRADA  CONJUNTO     CODFORNEC  FORNECEDOR  FORNEC  NOMEFRN  \n\ndb.define_table('PRODUTOS',\n   Field('CODIGO' ,'id'),\n   Field('NOME', 'string', label='Produto'),   \n   Field('NOME_HEB', 'string', label='Produto Hebraico'),      \n   Field('PRECO', 'string', label='Pre\xc3\xa7o'),\n   Field('ESTOQUE', 'integer'),\n   Field('ENTRADA', 'integer'),\n   Field('CONJUNTO', 'string', label='Produto'),\n   Field('CODFORNEC', db.FORNECEDORES),\n   Field('FORNEC', 'string'),\n   Field('NOMEFRN', 'string'),\n   format='%(NOME)s',\n   migrate=True)\n\n#############################################\n# EVENTOS  qual feira se refere\n#ID_EVENTO  NOME_EVENT  TAXA_DOLAR  \n   \ndb.define_table('EVENTOS',\n   Field('ID_EVENTO' ,'id'),\n   Field('NOME_EVENT', 'string', label='Produto'),  \n   Field('TAXA_DOLAR', 'double', label='Taxa Dolar'),    \n   format='%(NOME_EVENT)s',\n   migrate=True)         \n   \n#############################################\n# VENDAS\n# ORDEM  DT_SAIDA             CLIENTE   JUROS  VAL_JUROS  DESCONTO  VAL_DESCON  VAL_TOTAL  VAL_MERC  VALPAGO  EVENTO  \ndb.define_table('SAIDA',\n   Field('ORDEM' ,'id'),\n   Field('DT_SAIDA', 'date', label='Data da Venda'),   \n   Field('CLIENTE', db.CLIENTES, label='Cliente'),      \n   Field('JUROS', 'double', label='Pre\xc3\xa7o'),\n   Field('VAL_JUROS', 'double', label='Valor dos Juros'),\n   Field('DESCONTO', 'double', label='Desconto'),\n   Field('VAL_DESCON', 'double', label='Valor do Desconto'),\n   Field('VAL_TOTAL', 'double', label='Valor Total'),\n   Field('VAL_MERC', 'double', label='Valor da Mercadoria'),\n   Field('VALPAGO', 'double', label='Valor Pago'),\n   Field('EVENTO', db.EVENTOS),\n   migrate=True)\n   \n   \n#==========================================\n#\n#ORDEM, POSICAO, DT_SAIDA, PRODUTO, NOME, PRECO_VEND, QUANTIDADE, VAL_TOTAL  \ndb.define_table('ITENS_SAIDA',\n   Field('ORDEM' ,'integer'),\n   Field('POSICAO' , 'integer'),\n   Field('DT_SAIDA' ,'date'),\n   Field('PRODUTO' ,db.PRODUTOS),\n   Field('NOME' ,'string'),\n   Field('PRECO_VEND' ,'double'),\n   Field('QUANTIDADE' ,'integer'),\n   Field('VAL_TOTAL' ,compute=lambda r: r['PRECO_VEND']*r['QUANTIDADE']),\n   migrate=True)"
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "C:\\web2py\\gluon\\restricted.py", line 227, in restricted\n    exec ccode in environment\n  File "C:\\web2py\\applications\\wpstarter\\models\\db3_tables.py", line 59, in <module>\n    Field(\'CODFORNEC\', db.FORNECEDORES),\n  File "C:\\web2py\\gluon\\packages\\dal\\pydal\\base.py", line 920, in __getattr__\n    return self.lazy_define_table(tablename, *fields, **args)\n  File "C:\\web2py\\gluon\\packages\\dal\\pydal\\base.py", line 873, in lazy_define_table\n    polymodel=polymodel)\n  File "C:\\web2py\\gluon\\packages\\dal\\pydal\\adapters\\base.py", line 482, in create_table\n    self.create_sequence_and_triggers(query, table)\n  File "C:\\web2py\\gluon\\packages\\dal\\pydal\\adapters\\base.py", line 1369, in create_sequence_and_triggers\n    self.execute(query)\n  File "C:\\web2py\\gluon\\packages\\dal\\pydal\\adapters\\base.py", line 1388, in execute\n    return self.log_execute(*a, **b)\n  File "C:\\web2py\\gluon\\packages\\dal\\pydal\\adapters\\base.py", line 1382, in log_execute\n    ret = self.get_cursor().execute(command, *a[1:], **b)\n  File "C:\\web2py\\gluon\\contrib\\pymysql\\cursors.py", line 117, in execute\n    self.errorhandler(self, exc, value)\n  File "C:\\web2py\\gluon\\contrib\\pymysql\\connections.py", line 202, in defaulterrorhandler\n    raise errorclass, errorvalue\nInternalError: (1050, u"Table \'FORNECEDORES\' already exists")\n'
p11
s.